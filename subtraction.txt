0 // initial state
B 1 1 1 1 1 1 1 1 1 1 1 1 B 1 1 1 1 1 1 1 1 B // initial cell values on tape
0 0 0 0 R // state 0 finds right edge of first number
0 1 0 1 R
0 B 1 B R
1 0 1 0 R // state 1 finds right edge of second number
1 1 1 1 R
1 B 2 B L
2 0 2 0 L // if a 0, move left looking for a 1
2 1 3 0 L // remove right most 1 from right number
2 B 5 B R // if find a B before a 1, then erase 0s
3 0 3 0 L // move to left number
3 1 3 1 L 
3 B 8 B L 
4 0 4 0 R // find right edge of first number
4 1 4 1 R
4 B 5 B R
5 0 5 0 R // find right edge of second number
5 1 5 1 R
5 B 6 B L
6 0 6 B L // remove 0 from right number
6 1 6 1 L
6 B 7 B L
7 0 7 B L // remove 0 from left number
7 1 7 1 L
7 B 9 B R
8 0 8 0 L // move left looking for a 1 to change to a 0
8 1 0 0 R // if a 1, change to 0 and start over at state 0
8 B 4 B R // if a B, then all done, go to state 4 and to start erasing 0s
9 0 9 0 H // stop
9 1 9 1 H
9 B 9 0 H
-1 // end of action table
2 // initial position of read/write pointer
